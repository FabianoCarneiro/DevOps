//freestyle
for(AbstractItem project : hudson.model.Hudson.instance.items) {
	if(project instanceof FreeStyleProject) {
		//nome do projeto
		print project.name
		
		try{
			//lista url do repositorio
			print ";"+project.scm.getUserRemoteConfigs().url
		}
		catch (Exception e){
			// não tem scm configurado 
			print ";"+'n/a'
		}
		
		// user que executou ultimo build
		try{
		  for(hudson.model.Action act : project.getLastBuild().getActions()){
			if (act instanceof hudson.model.CauseAction){
			  print ";"+act.getCauses().userId
			}
		  } 
		}
		catch (Exception e){
		  print ";"+'null'
		}
		
		//parametros utilizados no ultimo build
		try{
			print ';'//+ project.getLastBuild().getBuildVariables()
		}
		catch (Exception e){
			print ";"+'null'
		}
		
		//data ultimo build
		try {
			print ";" + project.getLastBuild().timestamp.time
		}		
		catch (Exception e){
			print ";"+'null'
		}
		
		//lista de plugins
		for(hudson.tasks.Builder plugin : project.getBuilders()){
			//job tem plugin do sonar configurado 
			if (plugin instanceof hudson.plugins.sonar.SonarRunnerBuilder){
				print ";Plugin Sonar" 
				//exibe as propriedades que tenham sonar exclusions
				if(plugin.getProperties().contains('.exclusions')){
					print ';'+ plugin.getProperties().split()
				}				
			}
			else if (plugin instanceof hudson.tasks.Shell){
			  if(plugin.getContents().contains('sonar-scanner')){
				print ';Shell SonarScanner'
				//if(plugin.getContents().contains('sonar.exclusions')){
				//	print ';'''+ plugin.getContents() + ''''
				//}	
			  }else if(plugin.getContents().contains('sonar:sonar')){
						print ';Shell SonarMaven'
			  }
			}                          
			else if (plugin instanceof hudson.tasks.Maven){
				if(plugin.targets.contains('sonar:sonar')){
					print ';Plugin Maven'
				}
			}
		}
		
	  println ''
   }
 }
 /////fim do principal
				
<<<<<<< HEAD
					
=======
				

>>>>>>> 82d834ef47d23b4d580269215148dd1e682f1436
//smoke BUSCAR OS JOBS COM CUCUMBER E EXIT 0
for(hudson.model.AbstractItem project : hudson.model.Hudson.instance.items) {
  if (project.name.contains('SMOKE-')){
    //lista de plugins
    for(tasks.Builder plugin : project.getBuilders()){
      if (plugin instanceof hudson.tasks.Shell){        
<<<<<<< HEAD
        if ((plugin.getContents().contains('Cucumber still in development')||plugin.getContents().contains('Smoke test still in development')||plugin.getContents().contains('exit 0'))&&!plugin.getContents().contains('exit 1')){
		 //nome do projeto
		 print project.name 		 
		 print "|" + (project.getLastBuild() == null ? 'n/a' :project.getLastBuild().timestamp.time.format("YYYY-MM-dd HH:MM:SS"))
	     if (project.getLastBuild() != null){
           for(hudson.model.Action act : project.getLastBuild().getActions()){
             if (act instanceof hudson.model.CauseAction){
               try{
                  jobPai = Jenkins.instance.getItemByFullName(act.getCauses().upstreamProject)
		          //nome do chamador
			      print "|" + act.getCauses().upstreamProject 
				  print "|"  + ( jobPai.getLastBuild()==null ? 'n/a' :jobPai.getLastBuild().getEnvironment()["SUPERINTENDENTE"])
				  print "|"  + ( jobPai.getLastBuild()==null ? 'n/a' :jobPai.getLastBuild().getEnvironment()["TRIBO"])
				  print "|"  + ( jobPai.getLastBuild()==null ? 'n/a' :jobPai.getLastBuild().getEnvironment()["SQUAD"])
				  print "|"  + ( jobPai.getLastBuild()==null ? 'n/a' :jobPai.getLastBuild().getEnvironment()["SIGLA"])
				  print "|"  + ( jobPai.getLastBuild()==null ? 'n/a' :jobPai.getLastBuild().getEnvironment()["TECNOLOGIA"])
				  print "|"  + ( jobPai.getLastBuild()==null ? 'n/a' :jobPai.getLastBuild().getEnvironment()["SYSTEM_TEAM"])						                   
			   }
			   catch (Exception e){
                 				print e 
			                      print ";"+'n/a'
			   }      
             }
           }           
         } 
         println ""
=======
        if (plugin.getContents().contains('Cucumber still in development')||plugin.getContents().contains('exit 0')){
		 //nome do projeto
		 print project.name + "|" + (project.getLastBuild() == null ? 'n/a' :project.getLastBuild().timestamp.time.format("YYYY-MM-dd HH:MM:SS"))
          if (project.getLastBuild() != null){
            for(hudson.model.Action act : project.getLastBuild().getActions()){
              if (act instanceof hudson.model.CauseAction){
                try{
					//nome do chamador
					print "|" + act.getCauses().upstreamProject 
				}
				catch (Exception e){
					print ";"+'n/a'
				}      
              }
            }           
          } 
          println ""
>>>>>>> 82d834ef47d23b4d580269215148dd1e682f1436
        }
      }
    }
  }
}

<<<<<<< HEAD
=======

>>>>>>> 82d834ef47d23b4d580269215148dd1e682f1436
//SMOKE PARA BUSCAR ULTIMO LOG COM A INFORMAÇÃO CORRETA DE EXECUÇÃO TESTE "Running TestSuite"
import jenkins.model.*	
import jenkins.*	
import hudson.model.*
import hudson.*	

print 'JobName|LastBuild|startedBy'
println ""
for(hudson.model.AbstractItem project : hudson.model.Hudson.instance.items) {
  if (project.name.contains('SMOKE-')){
	  if (project.getLastBuild() != null){
		if (project.getLastBuild().getLog().contains('Running TestSuite')){
			print project.name + "|" + (project.getLastBuild() == null ? 'n/a' :project.getLastBuild().timestamp.time.format("YYYY-MM-dd HH:MM:SS"))
            for(hudson.model.Action act : project.getLastBuild().getActions()){
              if (act instanceof hudson.model.CauseAction){
                try{
					//nome do chamador
					print "|" + act.getCauses().upstreamProject 
				}
				catch (Exception e){
					print ";"+'n/a'
				}      
              }
            } 			
		  //println  "|" + project.getLastBuild().getLog()
			println ""
		}   
	} 
  }
}
<<<<<<< HEAD
  
 
 //JOBS Fortify tempo de execução
 print 'JobName|LastBuild|duration'
 println ""
for(hudson.model.AbstractItem project : hudson.model.Hudson.instance.items) {
  if (project.name.contains('FORTIFY-')){
    //lista de plugins
    for(tasks.Builder plugin : project.getBuilders()){
      if (plugin instanceof hudson.tasks.Shell){        
		 //nome do projeto
		print project.name + "|" + (project.getLastBuild() == null ? 'n/a' :project.getLastBuild().timestamp.time.format("YYYY-MM-dd HH:MM:SS"))
		print "|" + (project.getLastBuild() == null ? 'n/a' :project.getLastBuild().duration)
		println ""
      }
    }
  }
}
 
 
 
//parametros do APPREGISTER
print 'JobName|LastBuild|SUPERINTENDENTE|TRIBO|SQUAD|SIGLA|TECNOLOGIA|SYSTEM_TEAM'
println ""
for(AbstractItem project : hudson.model.Hudson.instance.items) {
	if(project instanceof FreeStyleProject) {
		if (!project.name.contains('SMOKE-')&&!project.name.contains('DB-')&&!project.name.contains('FORTIFY-')){
			if (project.getLastBuild() != null){
				try{
					print project.name + "|" + (project.getLastBuild() == null ? 'n/a' :project.getLastBuild().timestamp.time.format("YYYY-MM-dd HH:MM:SS"))
					print "|"  + ( project.getLastBuild()==null ? 'n/a' :project.getLastBuild().getEnvironment()["SUPERINTENDENTE"])
					print "|"  + ( project.getLastBuild()==null ? 'n/a' :project.getLastBuild().getEnvironment()["TRIBO"])
					print "|"  + ( project.getLastBuild()==null ? 'n/a' :project.getLastBuild().getEnvironment()["SQUAD"])
					print "|"  + ( project.getLastBuild()==null ? 'n/a' :project.getLastBuild().getEnvironment()["SIGLA"])
					print "|"  + ( project.getLastBuild()==null ? 'n/a' :project.getLastBuild().getEnvironment()["TECNOLOGIA"])
					print "|"  + ( project.getLastBuild()==null ? 'n/a' :project.getLastBuild().getEnvironment()["SYSTEM_TEAM"])	
					println "" 
				}
				catch (Exception e){
					print 'n/a'
					println "" 
				}				
			}
	
		}  
    }
}
 
 
//CHAMADA DO SMOKE
print 'JOBNAME|SMOKETEST|LastBuild|SUPERINTENDENTE|TRIBO|SQUAD|SIGLA|TECNOLOGIA|SYSTEM_TEAM'
println ""
for(AbstractItem project : hudson.model.Hudson.instance.items) {
  if(project instanceof FreeStyleProject && !project.name.contains("SMOKE-")){
    print project.name + "|"
    for(hudson.model.Action act : project.getActions()){
      if(act instanceof  hudson.plugins.promoted_builds.PromotedProjectAction){
	    for(hudson.plugins.promoted_builds.PromotionProcess promotion : act.getProcesses()){
		  for(hudson.tasks.BuildStep step : promotion.getBuildSteps()){
		    if(step instanceof hudson.plugins.parameterizedtrigger.TriggerBuilder){
              if(step.getConfigs()["projects"].contains("SMOKE-")){
				print step.getConfigs()["projects"]
				try{
					print "|"  + (project.getLastBuild() == null ? 'n/a' :project.getLastBuild().timestamp.time.format("YYYY-MM-dd HH:MM:SS"))
					print "|"  + ( project.getLastBuild()==null ? 'n/a' :project.getLastBuild().getEnvironment()["SUPERINTENDENTE"])
					print "|"  + ( project.getLastBuild()==null ? 'n/a' :project.getLastBuild().getEnvironment()["TRIBO"])
					print "|"  + ( project.getLastBuild()==null ? 'n/a' :project.getLastBuild().getEnvironment()["SQUAD"])
					print "|"  + ( project.getLastBuild()==null ? 'n/a' :project.getLastBuild().getEnvironment()["SIGLA"])
					print "|"  + ( project.getLastBuild()==null ? 'n/a' :project.getLastBuild().getEnvironment()["TECNOLOGIA"])
					print "|"  + ( project.getLastBuild()==null ? 'n/a' :project.getLastBuild().getEnvironment()["SYSTEM_TEAM"])											
				  }
				catch (Exception e){
					print 'n/a'
				}					  			  
			  }		  	 
			}
		  }
		}
      }
    }
  println "" 
  }   
} 



=======
 
 
 
 
 
 //tentativa de achar parametros do APPREGISTER
  for(AbstractItem project : hudson.model.Hudson.instance.items) {
    if(project instanceof FreeStyleProject) {
      	if (project.name.contains('JAVA-BR-BCL-ATL-BACKOFFICE')){
            println project.buildWrappers
              //for(hudson.plugins plugin : project.plugin()){	
                  //println plugin
                  //if (plugin instanceof hudson.tasks.Shell){
                  //  if(plugin.getContents().contains('sonar:sonar')){
                  //  	println 'scanner'
                   // }
                  //}
              //}
        }
   }
 }
 
   for(AbstractItem project : hudson.model.Hudson.instance.items) {
	if (project.name.contains('JAVA-BR-BCL-ATL-BACKOFFICE')){
		println project.JobProperty
	}

 }
 Jenkins.instance.getAllItems().each {it ->	
  if (it.name.contains('JAVA-BR-BCL-ATL-BACKOFFICE')){
		println it.name
	}
}
 
  for(AbstractItem project : hudson.model.Hudson.instance.items) {
    if(project instanceof FreeStyleProject) {
      println project.name
		for(hudson.tasks.Publisher plugin : project.getPublishersList()){	
			println plugin
			}
		}
   }
   
  for(AbstractItem project : hudson.model.Hudson.instance.items) {
    if(project instanceof FreeStyleProject) {
      //	println project.name
	  if (project.name.equals('JAVA-BR-BCL-ATL-BACKOFFICE')){
        for(hudson.tasks.BuildStep plugin : project.getAllProperties()){	
         // println plugin
		  
		  if(plugin instanceof org.jenkinsci.plugins.envinject.EnvInjectJobProperty){
			println plugin.getInfo()
		  }
		  
        }
      }
    }
  }
JAVA-BR-BCL-ATL-BACKOFFICE
hudson.security.AuthorizationMatrixProperty@22faba00
jenkins.model.BuildDiscarderProperty@86a9e8b
hudson.model.ParametersDefinitionProperty@1cbeb9d5
com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty@55af16c9
hudson.plugins.promoted_builds.JobPropertyImpl@22729cc6
org.jenkinsci.plugins.envinject.EnvInjectJobProperty@7e30c0c5
  
  
 
>>>>>>> 82d834ef47d23b4d580269215148dd1e682f1436
 
/// javas
for(AbstractItem project : hudson.model.Hudson.instance.items) {
	if (project.name.contains('JAVA-')){
  		print project.name 
		//data ultimo build
		try {
			print ";" + project.getLastBuild().timestamp.time.format("YYYY-MM-dd HH:MM:SS")
		}		
		catch (Exception e){
			print ";"+'null'
<<<<<<< HEAD
		}			
		try{
			//lista url do repositorio
			print ";"+project.scm.getUserRemoteConfigs().url
		}
		catch (Exception e){
			// não tem scm configurado 
			print ";"+'n/a'
		}      
=======
		}

			
			try{
				//lista url do repositorio
				print ";"+project.scm.getUserRemoteConfigs().url
			}
			catch (Exception e){
				// não tem scm configurado 
				print ";"+'n/a'
			}      
	
>>>>>>> 82d834ef47d23b4d580269215148dd1e682f1436
     println ''
	}
 }		
				
				
				
<<<<<<< HEAD
=======
				
				
>>>>>>> 82d834ef47d23b4d580269215148dd1e682f1436
 ///inicio testes 
 for(AbstractItem project : hudson.model.Hudson.instance.items) {
    if(project instanceof FreeStyleProject) {
      println project.name
		for(hudson.tasks.Builder plugin : project.getBuilders()){	
			println plugin
			//if (plugin instanceof hudson.tasks.Shell){
            //  if(plugin.getContents().contains('sonar:sonar')){
            //  	println 'scanner'
             // }
			}
		}
   }
 }
 
<<<<<<< HEAD
=======
   for(AbstractItem project : hudson.model.Hudson.instance.items) {
    if(project instanceof FreeStyleProject) {
		for(hudson.tasks.Builder plugin : project.getBuilders()){	
			if (plugin instanceof hudson.tasks.Maven){
				if (println plugin.targets.contains('sonar:sonar')){
					println 'sonar maven'
				}
			}
		}
   }
  }
 
 
 
 JAVA-BR-ISB-SPB-GESTAO-DOMINIOS

>>>>>>> 82d834ef47d23b4d580269215148dd1e682f1436
 
///pegar usuario do ultimo build 
for(AbstractItem project : hudson.model.Hudson.instance.items) {
  if(project instanceof FreeStyleProject) {
    println '>>>>>'+ project.name
<<<<<<< HEAD
    println project.getLastBuild().getActions()
=======
         //println project.getLastBuild().getActions().getCauses()
   x
>>>>>>> 82d834ef47d23b4d580269215148dd1e682f1436
    for(hudson.model.Action act : project.getLastBuild().getActions()){
      println "act>>>>"+act.getClass()
      if (act instanceof hudson.model.CauseAction){
          println "act>>>>"+act.getClass()
        println "action"+act.getCauses().getClass()//.userId
        //println "action"+act.getCauses().userId
      }else{println 'não'}
    }

  }
}
 
 
///pegar usuario do ultimo build 
for(AbstractItem project : hudson.model.Hudson.instance.items) {
  if(project instanceof FreeStyleProject) {
    println project.name
    
    try{
      for(hudson.model.Action act : project.getLastBuild().getActions()){
        if (act instanceof hudson.model.CauseAction){
          print act.getCauses().userId
        }
      } 
    }
	catch (Exception e){
      print ";"+'null'
    }
  }
}


 
 
<<<<<<< HEAD
////JENKINS DOCKER 
=======
 
>>>>>>> 82d834ef47d23b4d580269215148dd1e682f1436
println '**************************INICIO DE PROCESSAMENTO*******************************'
println 'JOB|DTULTIMOBUILD|DTULTIMOSUCESSO|DTLASTBUILD|DTULTIMOSUCESSO|'
 
def qt=0
 
Jenkins.instance.getAllItems().each {it ->
	if (it instanceof org.jenkinsci.plugins.workflow.job.WorkflowJob){
		println it.displayName +'|' + (it.lastBuild== null ? 'N/A' :it.lastBuild.time.format("YYYY-MM-dd HH:MM:SS")) + '|' + (it.lastSuccessfulBuild== null ? 'N/A' :it.lastSuccessfulBuild.time.format("YYYY-MM-dd HH:MM:SS"))+'|' + (it.lastBuild== null ? 'N/A' :it.lastBuild.time.format("YYYYMM"))+'|' + (it.lastSuccessfulBuild== null ? 'N/A' :it.lastSuccessfulBuild.time.format("YYYYMM"))+'|'
      qt++
    }
}
println 'Total de Jobs:'+qt
println '**************************FIM DE PROCESSAMENTO*******************************'
 

<<<<<<< HEAD
 SE(TIPO.ERRO(PROCV($A2;Dados!E:E;1;FALSO))<>7;PROCV($A2;Dados!E:E;1;FALSO);0)
 SE(TIPO.ERRO(PROCV($A2;Dados!E:E;1;FALSO))<>7;ESCOLHER(PROCV($A2;Dados!E:E;1;FALSO));"Os intervalos não interceptam";"O divisor é zero"))]
 SE(TIPO.ERRO(A3)<3;ESCOLHER(TIPO.ERRO(A3);"Os intervalos não interceptam";"O divisor é zero"))
	
=======
	
 
>>>>>>> 82d834ef47d23b4d580269215148dd1e682f1436
 
 
 
